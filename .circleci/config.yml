version: 2.1

orbs:
  kubernetes: opuscapita/kubernetes@volatile

aliases:
  - &inject-environment
    name: Inject environment
    command: /bin/env_inject.sh
  - &save-cache-checksum
    name: Save cache checksum
    command: find . -name "package.json" | sort | xargs cat >> /tmp/cache-checksum
  - &restore-cache
    keys:
      - dependencies-{{ checksum "/tmp/cache-checksum" }}
  - &save-cache
    key: dependencies-{{ checksum "/tmp/cache-checksum" }}
    paths:
      - ./package-lock.json
      - ./node_modules
      - ./packages/client-react/package-lock.json
      - ./packages/client-react/node_modules
      - ./packages/connector-google-drive-v2/package-lock.json
      - ./packages/connector-google-drive-v2/node_modules
      - ./packages/connector-node-v1/package-lock.json
      - ./packages/connector-node-v1/node_modules
      - ./packages/server-nodejs/package-lock.json
      - ./packages/server-nodejs/node_modules
      - ./packages/demoapp/package-lock.json
      - ./packages/demoapp/node_modules
  - &install-dependencies
    name: Install dependencies
    # we use --unsafe-perm as current build using root user which fails
    command: npm install --unsafe-perm
defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u131-nodejs-8.9.4-maven-3.3.9
  working_directory: ~/build

jobs:
  build:
    <<: *defaults
    steps:
      - run: *inject-environment
      - checkout
      - run: *save-cache-checksum
      - restore_cache: *restore-cache
      - run: *install-dependencies
      - save_cache: *save-cache
      - run:
          name: Lint sources
          command: npm run lint
      - run:
          name: Run REST API tests
          working_directory: ./packages/server-nodejs
          command: npm run test-restapi
      - store_test_results:
          path: ./packages/server-nodejs/test-results
      - store_artifacts:
          path: ./packages/server-nodejs/test-results
      - run:
          name: Publish to npm
          command: |
            if [ ! -z "${CIRCLE_TAG}" ]; then
              npm run publish
            else
              echo "This step is skipped as this is not a release build"
            fi

  build-demo:
    <<: *defaults
    steps:
      - run: *inject-environment
      - checkout
      - run: *save-cache-checksum
      - restore_cache: *restore-cache
      - run: *install-dependencies
      - save_cache: *save-cache
      - setup_remote_docker
      - run:
          name: Build client static files
          command: |
            cd packages/client-react
            npm run gh-pages:build
            rm -rf ../demoapp/static
            mkdir -p ../demoapp/static
            mv .gh-pages-tmp/* ../demoapp/static/
      - run:
          name: Build server API docs
          command: |
            cd packages/server-nodejs
            npm run build-api-docs
            mkdir -p ../demoapp/static/api
            cp -r api-docs.tmp/docs ../demoapp/static/api
      - run:
          name: Generate demo files
          command: |
            mkdir -p packages/demoapp/demoapp/demo-files
            ./demo-filesystem/populate-demo-fs.sh ./packages/demoapp/demo-files
      - run:
          name: Deploy docker demo image
          command: .docker/build-and-push.sh

workflows:
  version: 2
  build-and-deploy-to-cloud:
    jobs:
      - build
      - build-demo:
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
      - kubernetes/deploy-demo:
          requires:
            - build-demo

